@*@{
    ViewData["Title"] = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/fileUpload.css">

<body class="font">
    <div class="error-background" id="error-background">
        <div class="error-container">
            <span class="error-close" id="error-close">&times;</span>
            <h2 class="error-title">Error</h2>
            <p id="error-message"></p>
        </div>
    </div>
    <div class="container-fluid" id="page-container">
        <div class="row mt-5">
            <div class="col-12 h-100 text-center header-container">
                <header>
                    <h1>File Upload Portal</h1>
                </header>
            </div>
        </div>
        <div class="row mt-5 justify-content-center text-center">
            <div class="col-md-5 d-flex justify-content-end h-200 p-2">
                <button class="btn btn-primary browse-btn rounded-pill btn-lg text-white text-decoration-none"
                    type="button" id="upload-button" onclick="uploadDocumentToApplication()">
                    Browse files
                </button>
            </div>
            <div class="col-md-5 d-flex justify-content-start h-100 p-2">
                <button class="btn btn-primary next-btn rounded-pill btn-lg text-white text-decoration-none"
                    onclick="uploadFileFlow();" type="button" id="next-button" disabled>Next</button>
            </div>
            <div class="paneling d-none d-flex" id="uploadFileDisplayPanel">
                <span type="button" onclick="deleteSelectedFile()" id="delete-button"
                    class="close d-none">&times;</span>
                <span class="justify-content-center text-dark fillFile" id="selected-file-name">0 Files
                    Uploaded</span>
            </div>
        </div>
        @* <div class="row mt-4 justify-content-center">
        <button class="btn btn-primary rounded-pill btn-lg text-white text-decoration-none d-none"
        onclick="deleteSelectedFile()" type="button" id="delete-button">Delete</button>
        </div> 
    </div>
    <div class="container-fluid" id="page-container">
        <div class="row mt-4 justify-content-center">
            <div class="col-md-6 instructions-box">
                <h3 class="mb-3">Instructions</h3>
                <ul class="instructions-list">
                    <li>
                        <div>Select a file:</div> Click "Browse files" and choose the file you want to upload.
                    </li>
                    <li>
                        <div>Review and decide:</div> Your file will appear below. Click the 'X' to remove it.
                    </li>
                    <li>
                        <div>Proceed to analyze:</div> Click "Next" to continue.
                    </li>
                </ul>
            </div>
        </div>
    </div>
    @*<svg class="loader-spinner" id="loader-spinner" version="1.2" xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 100 59">
    <path
    d="M55.42 25.14C55.64 26.48 55.75 27.85 55.75 29.25C55.75 43.27 44.46 54.61 30.5 54.61C16.54 54.61 5.25 43.27 5.25 29.25C5.25 15.23 16.54 3.89 30.5 3.89 C34.8 3.89 38.84 4.97 42.38 6.86" />
    <path
    d="M44.28 33.78C44.04 32.45 43.9 31.08 43.88 29.68C43.64 15.66 54.73 4.13 68.69 3.9C82.65 3.66 94.13 14.8 94.37 28.82C94.61 42.84 83.52 54.36 69.56 54.6C65.26 54.68 61.19 53.67 57.62 51.84" />
    </svg>

    @using System.Security.Cryptography;
    @using System.Text;
</body>

@{
    string username = User?.Identity?.Name ?? "Unknown";
    using (var sha256 = SHA256.Create())
    {
        string hashedUsername = BitConverter.ToString(sha256.ComputeHash(Encoding.UTF8.GetBytes(username))).Replace("-",
        "").ToLowerInvariant();
        <script>sessionStorage.setItem("sessionNamespace", "@hashedUsername");</script>
    }
}
<script src="/js/fileUpload.js"></script>


 async function uploadDocumentToPinecone() {
        const requestBody = {
            namespace: sessionStorage.getItem("sessionNamespace"),
            fileName: sessionStorage.getItem("selectedFile")
        };
        await fetch("https://strive-ml-api.azurewebsites.net/embedder", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': '*',
                'Access-Control-Allow-Headers': '*'
            },
            body: JSON.stringify(requestBody)
        })
            .then(response => {
                if (!response.ok) {
                    displayError("System is under maintenance. Please try again later.")
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .catch(error => {
                displayError("System is under maintenance. Please try again later.");
                console.error('Fetch error:', error);
            });

    }*@